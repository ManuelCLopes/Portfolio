import React from 'react';
import { motion } from 'framer-motion';
import Tippy from '@tippyjs/react'; // Tooltip library
import 'tippy.js/dist/tippy.css'; // Tooltip styles

const projects = [
  {
    name: 'Hipermarket Simulator',
    description: 'C++ application that simulates an hipermarket.',
    github: 'https://github.com/ManuelCLopes/HipermarketSimulator',
    technologies: ['cplusplus'],
  },
  {
    name: 'GraphPathsCalculator',
    description: 'This C++ application was implemented in order to explore the capabilities of graphs.',
    github: 'https://github.com/ManuelCLopes/GraphPathsCalculator',
    technologies: ['cplusplus'],
  },
  {
    name: 'Restaurant Management Desktop App',
    description: 'This application was implemented in Python in order to helps the management of restaurants. I used Tkinter python module in front-end and PostgreSQL11 as database server.',
    github: 'https://github.com/ManuelCLopes/RestaurantManagement',
    technologies: ['python', 'postgresql'],
  },
  {
    name: 'EasyScan',
    description: 'Native OCR mobile application integrated with Firebase and Google Cloud Functions',
    github: 'https://github.com/ManuelCLopes/EasyScan',
    technologies: ['kotlin', 'googlecloud', 'firebase'],
  },
  {
    name: 'Real-time Monitoring Safety System',
    description: 'An Intelligent and Scalable IoT Monitoring Framework for Safety in Civil Construction workspaces and other sectors',
    github: 'https://link.springer.com/chapter/10.1007/978-3-031-14859-0_6',
    technologies: ['python', 'kafka', 'rabbitmq', 'activemq', 'docker', 'jmeter'],
  },
  {
    name: 'Finance Tracker Mobile App',
    description: 'This is a Finance Tracker application built with Flutter, designed to help users manage their expenses, income, and investments efficiently. The app supports multiple languages and provides features such as adding transactions, calculating net worth, and viewing an overview of financial activities.',
    github: 'https://github.com/ManuelCLopes/finance_tracker',
    technologies: ['flutter', 'dart'],
  },
  {
    name: 'Finance Tracker Web App',
    description: 'A web-based application that allows users to visualize their financial data using various charts. Users can upload their financial data by scanning a QR code generated by the application and view the visualized data in real-time.',
    github: 'https://github.com/ManuelCLopes/finance_dashboard',
    technologies: ['python', 'django', 'javascript'],
  },
];

const techLogos = {
  python: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/python.svg', label: 'Python' },
  cplusplus: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/cplusplus.svg', label: 'C++' },
  postgresql: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/postgresql.svg', label: 'PostgreSQL' },
  django: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/django.svg', label: 'Django' },
  javascript: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/javascript.svg', label: 'Javascript' },
  react: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/react.svg', label: 'React' },
  docker: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/docker.svg', label: 'Docker' },
  flutter: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/flutter.svg', label: 'Flutter' },
  dart: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/dart.svg', label: 'Dart' },
  firebase: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/firebase.svg', label: 'Firebase' },
  googlecloud: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/googlecloud.svg', label: 'GCP' },
  kotlin: { url: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/kotlin.svg', label: 'Kotlin' },
  rabbitmq: { url: 'https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/rabbitmq.svg', label: 'RabbitMQ' },
  activemq: { url: 'https://upload.wikimedia.org/wikipedia/commons/4/4e/Apache_ActiveMQ_logo.svg', label: 'ActiveMQ' },
  jmeter: { url: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/JMeter_logo.svg', label: 'jMeter' },
  kafka: { url: 'https://upload.wikimedia.org/wikipedia/commons/0/0a/Apache_kafka-icon.svg', label: 'Kafka' },
};

const Projects = () => {
  return (
    <div className="p-12 bg-gray-900 text-white">
      <h2 className="text-5xl font-bold mb-8 text-center">Projects</h2>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {projects.map((project) => (
          <motion.div
            key={project.name}
            whileHover={{ scale: 1.05 }}
            className="relative p-6 bg-gray-800 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 border-2 border-transparent hover:border-blue-400"
          >
            <h3 className="text-2xl font-bold mb-2">{project.name}</h3>
            <p className="text-gray-400 mb-4">{project.description}</p>
            <div className="flex space-x-4 mb-4">
              {project.technologies.map((tech) => (
                <Tippy key={tech} content={techLogos[tech].label}>
                  <img
                    src={techLogos[tech].url}
                    alt={techLogos[tech].label}
                    className="w-8 h-8 hover:scale-110 transition-transform"
                  />
                </Tippy>
              ))}
            </div>
            <a
              href={project.github}
              className="text-blue-400 hover:text-blue-600 transition-colors"
            >
              View on GitHub
            </a>
          </motion.div>
        ))}
      </div>
    </div>
  );
};

export default Projects;
